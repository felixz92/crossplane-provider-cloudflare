"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Record:
    r"""
    Record is the Schema for the Records API. Provides a Cloudflare record resource.

    Attributes
    ----------
    apiVersion : str, default is "dns.cloudflare.crossplane.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Record", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : DNSCloudflareCrossplaneIoV1alpha1RecordSpec, default is Undefined, required
        spec
    status : DNSCloudflareCrossplaneIoV1alpha1RecordStatus, default is Undefined, optional
        status
    """


    apiVersion: "dns.cloudflare.crossplane.io/v1alpha1" = "dns.cloudflare.crossplane.io/v1alpha1"

    kind: "Record" = "Record"

    metadata?: v1.ObjectMeta

    spec: DNSCloudflareCrossplaneIoV1alpha1RecordSpec

    status?: DNSCloudflareCrossplaneIoV1alpha1RecordStatus


schema DNSCloudflareCrossplaneIoV1alpha1RecordSpec:
    r"""
    RecordSpec defines the desired state of Record

    Attributes
    ----------
    deletionPolicy : str, default is "Delete", optional
        DeletionPolicy specifies what will happen to the underlying external
        when this managed resource is deleted - either "Delete" or "Orphan" the
        external resource.
        This field is planned to be deprecated in favor of the ManagementPolicies
        field in a future release. Currently, both could be set independently and
        non-default values would be honored if the feature flag is enabled.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
    forProvider : DNSCloudflareCrossplaneIoV1alpha1RecordSpecForProvider, default is Undefined, required
        for provider
    initProvider : DNSCloudflareCrossplaneIoV1alpha1RecordSpecInitProvider, default is Undefined, optional
        init provider
    managementPolicies : [str], default is ["*"], optional
        THIS IS A BETA FIELD. It is on by default but can be opted out
        through a Crossplane feature flag.
        ManagementPolicies specify the array of actions Crossplane is allowed to
        take on the managed and external resources.
        This field is planned to replace the DeletionPolicy field in a future
        release. Currently, both could be set independently and non-default
        values would be honored if the feature flag is enabled. If both are
        custom, the DeletionPolicy field will be ignored.
        See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
        and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
    providerConfigRef : DNSCloudflareCrossplaneIoV1alpha1RecordSpecProviderConfigRef, default is Undefined, optional
        provider config ref
    publishConnectionDetailsTo : DNSCloudflareCrossplaneIoV1alpha1RecordSpecPublishConnectionDetailsTo, default is Undefined, optional
        publish connection details to
    writeConnectionSecretToRef : DNSCloudflareCrossplaneIoV1alpha1RecordSpecWriteConnectionSecretToRef, default is Undefined, optional
        write connection secret to ref
    """


    deletionPolicy?: "Orphan" | "Delete" = "Delete"

    forProvider: DNSCloudflareCrossplaneIoV1alpha1RecordSpecForProvider

    initProvider?: DNSCloudflareCrossplaneIoV1alpha1RecordSpecInitProvider

    managementPolicies?: [str] = ["*"]

    providerConfigRef?: DNSCloudflareCrossplaneIoV1alpha1RecordSpecProviderConfigRef

    publishConnectionDetailsTo?: DNSCloudflareCrossplaneIoV1alpha1RecordSpecPublishConnectionDetailsTo

    writeConnectionSecretToRef?: DNSCloudflareCrossplaneIoV1alpha1RecordSpecWriteConnectionSecretToRef


schema DNSCloudflareCrossplaneIoV1alpha1RecordSpecForProvider:
    r"""
    DNS cloudflare crossplane io v1alpha1 record spec for provider

    Attributes
    ----------
    allowOverwrite : bool, default is Undefined, optional
        This configuration is not recommended for most environments. Defaults to false. **This configuration is not recommended for most environments**. Defaults to `false`.
    comment : str, default is Undefined, optional
        (String) Comments or notes about the DNS record. This field has no effect on DNS responses.
        Comments or notes about the DNS record. This field has no effect on DNS responses.
    content : str, default is Undefined, optional
        (String) The content of the record. Must provide only one of data, content, value.
        The content of the record. Must provide only one of `data`, `content`, `value`.
    data : [DNSCloudflareCrossplaneIoV1alpha1RecordSpecForProviderDataItems0], default is Undefined, optional
        (Block List, Max: 1) Map of attributes that constitute the record value. Must provide only one of data, content, value. (see below for nested schema)
        Map of attributes that constitute the record value. Must provide only one of `data`, `content`, `value`.
    name : str, default is Undefined, optional
        (String) The name of the record. Modifying this attribute will force creation of a new resource.
        The name of the record. **Modifying this attribute will force creation of a new resource.**
    priority : float, default is Undefined, optional
        (Number) The priority of the record.
        The priority of the record.
    proxied : bool, default is Undefined, optional
        (Boolean) Whether the record gets Cloudflare's origin protection.
        Whether the record gets Cloudflare's origin protection.
    tags : [str], default is Undefined, optional
        (Set of String) Custom tags for the DNS record.
        Custom tags for the DNS record.
    ttl : float, default is Undefined, optional
        (Number) The TTL of the record.
        The TTL of the record.
    $type : str, default is Undefined, optional
        (String) The type of the record. Available values: A, AAAA, CAA, CNAME, TXT, SRV, LOC, MX, NS, SPF, CERT, DNSKEY, DS, NAPTR, SMIMEA, SSHFP, TLSA, URI, PTR, HTTPS, SVCB. Modifying this attribute will force creation of a new resource.
        The type of the record. Available values: `A`, `AAAA`, `CAA`, `CNAME`, `TXT`, `SRV`, `LOC`, `MX`, `NS`, `SPF`, `CERT`, `DNSKEY`, `DS`, `NAPTR`, `SMIMEA`, `SSHFP`, `TLSA`, `URI`, `PTR`, `HTTPS`, `SVCB`. **Modifying this attribute will force creation of a new resource.**
    value : str, default is Undefined, optional
        (String, Deprecated) The value of the record. Must provide only one of data, content, value.
        The value of the record. Must provide only one of `data`, `content`, `value`.
    zoneId : str, default is Undefined, optional
        (String) The zone identifier to target for the resource. Modifying this attribute will force creation of a new resource.
        The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
    zoneIdRef : DNSCloudflareCrossplaneIoV1alpha1RecordSpecForProviderZoneIDRef, default is Undefined, optional
        zone Id ref
    zoneIdSelector : DNSCloudflareCrossplaneIoV1alpha1RecordSpecForProviderZoneIDSelector, default is Undefined, optional
        zone Id selector
    """


    allowOverwrite?: bool

    comment?: str

    content?: str

    data?: [DNSCloudflareCrossplaneIoV1alpha1RecordSpecForProviderDataItems0]

    name?: str

    priority?: float

    proxied?: bool

    tags?: [str]

    ttl?: float

    $type?: str

    value?: str

    zoneId?: str

    zoneIdRef?: DNSCloudflareCrossplaneIoV1alpha1RecordSpecForProviderZoneIDRef

    zoneIdSelector?: DNSCloudflareCrossplaneIoV1alpha1RecordSpecForProviderZoneIDSelector


schema DNSCloudflareCrossplaneIoV1alpha1RecordSpecForProviderDataItems0:
    r"""
    DNS cloudflare crossplane io v1alpha1 record spec for provider data items0

    Attributes
    ----------
    algorithm : float, default is Undefined, optional
        (Number)
    altitude : float, default is Undefined, optional
        (Number)
    certificate : str, default is Undefined, optional
        (String)
    content : str, default is Undefined, optional
        (String) The content of the record. Must provide only one of data, content, value.
    digest : str, default is Undefined, optional
        (String)
    digestType : float, default is Undefined, optional
        (Number)
    fingerprint : str, default is Undefined, optional
        (String)
    flags : str, default is Undefined, optional
        (String)
    keyTag : float, default is Undefined, optional
        (Number)
    latDegrees : float, default is Undefined, optional
        (Number)
    latDirection : str, default is Undefined, optional
        (String)
    latMinutes : float, default is Undefined, optional
        (Number)
    latSeconds : float, default is Undefined, optional
        (Number)
    longDegrees : float, default is Undefined, optional
        (Number)
    longDirection : str, default is Undefined, optional
        (String)
    longMinutes : float, default is Undefined, optional
        (Number)
    longSeconds : float, default is Undefined, optional
        (Number)
    matchingType : float, default is Undefined, optional
        (Number)
    name : str, default is Undefined, optional
        (String) The name of the record. Modifying this attribute will force creation of a new resource.
    order : float, default is Undefined, optional
        (Number)
    port : float, default is Undefined, optional
        (Number)
    precisionHorz : float, default is Undefined, optional
        (Number)
    precisionVert : float, default is Undefined, optional
        (Number)
    preference : float, default is Undefined, optional
        (Number)
    priority : float, default is Undefined, optional
        (Number) The priority of the record.
    proto : str, default is Undefined, optional
        (String)
    $protocol : float, default is Undefined, optional
        (Number)
    publicKey : str, default is Undefined, optional
        (String)
    regex : str, default is Undefined, optional
        (String)
    replacement : str, default is Undefined, optional
        (String)
    selector : float, default is Undefined, optional
        (Number)
    service : str, default is Undefined, optional
        (String)
    size : float, default is Undefined, optional
        (Number)
    tag : str, default is Undefined, optional
        (String)
    target : str, default is Undefined, optional
        (String)
    $type : float, default is Undefined, optional
        (String) The type of the record. Available values: A, AAAA, CAA, CNAME, TXT, SRV, LOC, MX, NS, SPF, CERT, DNSKEY, DS, NAPTR, SMIMEA, SSHFP, TLSA, URI, PTR, HTTPS, SVCB. Modifying this attribute will force creation of a new resource.
    usage : float, default is Undefined, optional
        (Number)
    value : str, default is Undefined, optional
        (String, Deprecated) The value of the record. Must provide only one of data, content, value.
    weight : float, default is Undefined, optional
        (Number)
    """


    algorithm?: float

    altitude?: float

    certificate?: str

    content?: str

    digest?: str

    digestType?: float

    fingerprint?: str

    flags?: str

    keyTag?: float

    latDegrees?: float

    latDirection?: str

    latMinutes?: float

    latSeconds?: float

    longDegrees?: float

    longDirection?: str

    longMinutes?: float

    longSeconds?: float

    matchingType?: float

    name?: str

    order?: float

    port?: float

    precisionHorz?: float

    precisionVert?: float

    preference?: float

    priority?: float

    proto?: str

    $protocol?: float

    publicKey?: str

    regex?: str

    replacement?: str

    selector?: float

    service?: str

    size?: float

    tag?: str

    target?: str

    $type?: float

    usage?: float

    value?: str

    weight?: float


schema DNSCloudflareCrossplaneIoV1alpha1RecordSpecForProviderZoneIDRef:
    r"""
    Reference to a Zone in dns to populate zoneId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DNSCloudflareCrossplaneIoV1alpha1RecordSpecForProviderZoneIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DNSCloudflareCrossplaneIoV1alpha1RecordSpecForProviderZoneIDRefPolicy


schema DNSCloudflareCrossplaneIoV1alpha1RecordSpecForProviderZoneIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSCloudflareCrossplaneIoV1alpha1RecordSpecForProviderZoneIDSelector:
    r"""
    Selector for a Zone in dns to populate zoneId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DNSCloudflareCrossplaneIoV1alpha1RecordSpecForProviderZoneIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DNSCloudflareCrossplaneIoV1alpha1RecordSpecForProviderZoneIDSelectorPolicy


schema DNSCloudflareCrossplaneIoV1alpha1RecordSpecForProviderZoneIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSCloudflareCrossplaneIoV1alpha1RecordSpecInitProvider:
    r"""
    THIS IS A BETA FIELD. It will be honored
    unless the Management Policies feature flag is disabled.
    InitProvider holds the same fields as ForProvider, with the exception
    of Identifier and other resource reference fields. The fields that are
    in InitProvider are merged into ForProvider when the resource is created.
    The same fields are also added to the terraform ignore_changes hook, to
    avoid updating them after creation. This is useful for fields that are
    required on creation, but we do not desire to update them after creation,
    for example because of an external controller is managing them, like an
    autoscaler.

    Attributes
    ----------
    allowOverwrite : bool, default is Undefined, optional
        This configuration is not recommended for most environments. Defaults to false. **This configuration is not recommended for most environments**. Defaults to `false`.
    comment : str, default is Undefined, optional
        (String) Comments or notes about the DNS record. This field has no effect on DNS responses.
        Comments or notes about the DNS record. This field has no effect on DNS responses.
    content : str, default is Undefined, optional
        (String) The content of the record. Must provide only one of data, content, value.
        The content of the record. Must provide only one of `data`, `content`, `value`.
    data : [DNSCloudflareCrossplaneIoV1alpha1RecordSpecInitProviderDataItems0], default is Undefined, optional
        (Block List, Max: 1) Map of attributes that constitute the record value. Must provide only one of data, content, value. (see below for nested schema)
        Map of attributes that constitute the record value. Must provide only one of `data`, `content`, `value`.
    name : str, default is Undefined, optional
        (String) The name of the record. Modifying this attribute will force creation of a new resource.
        The name of the record. **Modifying this attribute will force creation of a new resource.**
    priority : float, default is Undefined, optional
        (Number) The priority of the record.
        The priority of the record.
    proxied : bool, default is Undefined, optional
        (Boolean) Whether the record gets Cloudflare's origin protection.
        Whether the record gets Cloudflare's origin protection.
    tags : [str], default is Undefined, optional
        (Set of String) Custom tags for the DNS record.
        Custom tags for the DNS record.
    ttl : float, default is Undefined, optional
        (Number) The TTL of the record.
        The TTL of the record.
    $type : str, default is Undefined, optional
        (String) The type of the record. Available values: A, AAAA, CAA, CNAME, TXT, SRV, LOC, MX, NS, SPF, CERT, DNSKEY, DS, NAPTR, SMIMEA, SSHFP, TLSA, URI, PTR, HTTPS, SVCB. Modifying this attribute will force creation of a new resource.
        The type of the record. Available values: `A`, `AAAA`, `CAA`, `CNAME`, `TXT`, `SRV`, `LOC`, `MX`, `NS`, `SPF`, `CERT`, `DNSKEY`, `DS`, `NAPTR`, `SMIMEA`, `SSHFP`, `TLSA`, `URI`, `PTR`, `HTTPS`, `SVCB`. **Modifying this attribute will force creation of a new resource.**
    value : str, default is Undefined, optional
        (String, Deprecated) The value of the record. Must provide only one of data, content, value.
        The value of the record. Must provide only one of `data`, `content`, `value`.
    zoneId : str, default is Undefined, optional
        (String) The zone identifier to target for the resource. Modifying this attribute will force creation of a new resource.
        The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
    zoneIdRef : DNSCloudflareCrossplaneIoV1alpha1RecordSpecInitProviderZoneIDRef, default is Undefined, optional
        zone Id ref
    zoneIdSelector : DNSCloudflareCrossplaneIoV1alpha1RecordSpecInitProviderZoneIDSelector, default is Undefined, optional
        zone Id selector
    """


    allowOverwrite?: bool

    comment?: str

    content?: str

    data?: [DNSCloudflareCrossplaneIoV1alpha1RecordSpecInitProviderDataItems0]

    name?: str

    priority?: float

    proxied?: bool

    tags?: [str]

    ttl?: float

    $type?: str

    value?: str

    zoneId?: str

    zoneIdRef?: DNSCloudflareCrossplaneIoV1alpha1RecordSpecInitProviderZoneIDRef

    zoneIdSelector?: DNSCloudflareCrossplaneIoV1alpha1RecordSpecInitProviderZoneIDSelector


schema DNSCloudflareCrossplaneIoV1alpha1RecordSpecInitProviderDataItems0:
    r"""
    DNS cloudflare crossplane io v1alpha1 record spec init provider data items0

    Attributes
    ----------
    algorithm : float, default is Undefined, optional
        (Number)
    altitude : float, default is Undefined, optional
        (Number)
    certificate : str, default is Undefined, optional
        (String)
    content : str, default is Undefined, optional
        (String) The content of the record. Must provide only one of data, content, value.
    digest : str, default is Undefined, optional
        (String)
    digestType : float, default is Undefined, optional
        (Number)
    fingerprint : str, default is Undefined, optional
        (String)
    flags : str, default is Undefined, optional
        (String)
    keyTag : float, default is Undefined, optional
        (Number)
    latDegrees : float, default is Undefined, optional
        (Number)
    latDirection : str, default is Undefined, optional
        (String)
    latMinutes : float, default is Undefined, optional
        (Number)
    latSeconds : float, default is Undefined, optional
        (Number)
    longDegrees : float, default is Undefined, optional
        (Number)
    longDirection : str, default is Undefined, optional
        (String)
    longMinutes : float, default is Undefined, optional
        (Number)
    longSeconds : float, default is Undefined, optional
        (Number)
    matchingType : float, default is Undefined, optional
        (Number)
    name : str, default is Undefined, optional
        (String) The name of the record. Modifying this attribute will force creation of a new resource.
    order : float, default is Undefined, optional
        (Number)
    port : float, default is Undefined, optional
        (Number)
    precisionHorz : float, default is Undefined, optional
        (Number)
    precisionVert : float, default is Undefined, optional
        (Number)
    preference : float, default is Undefined, optional
        (Number)
    priority : float, default is Undefined, optional
        (Number) The priority of the record.
    proto : str, default is Undefined, optional
        (String)
    $protocol : float, default is Undefined, optional
        (Number)
    publicKey : str, default is Undefined, optional
        (String)
    regex : str, default is Undefined, optional
        (String)
    replacement : str, default is Undefined, optional
        (String)
    selector : float, default is Undefined, optional
        (Number)
    service : str, default is Undefined, optional
        (String)
    size : float, default is Undefined, optional
        (Number)
    tag : str, default is Undefined, optional
        (String)
    target : str, default is Undefined, optional
        (String)
    $type : float, default is Undefined, optional
        (String) The type of the record. Available values: A, AAAA, CAA, CNAME, TXT, SRV, LOC, MX, NS, SPF, CERT, DNSKEY, DS, NAPTR, SMIMEA, SSHFP, TLSA, URI, PTR, HTTPS, SVCB. Modifying this attribute will force creation of a new resource.
    usage : float, default is Undefined, optional
        (Number)
    value : str, default is Undefined, optional
        (String, Deprecated) The value of the record. Must provide only one of data, content, value.
    weight : float, default is Undefined, optional
        (Number)
    """


    algorithm?: float

    altitude?: float

    certificate?: str

    content?: str

    digest?: str

    digestType?: float

    fingerprint?: str

    flags?: str

    keyTag?: float

    latDegrees?: float

    latDirection?: str

    latMinutes?: float

    latSeconds?: float

    longDegrees?: float

    longDirection?: str

    longMinutes?: float

    longSeconds?: float

    matchingType?: float

    name?: str

    order?: float

    port?: float

    precisionHorz?: float

    precisionVert?: float

    preference?: float

    priority?: float

    proto?: str

    $protocol?: float

    publicKey?: str

    regex?: str

    replacement?: str

    selector?: float

    service?: str

    size?: float

    tag?: str

    target?: str

    $type?: float

    usage?: float

    value?: str

    weight?: float


schema DNSCloudflareCrossplaneIoV1alpha1RecordSpecInitProviderZoneIDRef:
    r"""
    Reference to a Zone in dns to populate zoneId.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DNSCloudflareCrossplaneIoV1alpha1RecordSpecInitProviderZoneIDRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DNSCloudflareCrossplaneIoV1alpha1RecordSpecInitProviderZoneIDRefPolicy


schema DNSCloudflareCrossplaneIoV1alpha1RecordSpecInitProviderZoneIDRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSCloudflareCrossplaneIoV1alpha1RecordSpecInitProviderZoneIDSelector:
    r"""
    Selector for a Zone in dns to populate zoneId.

    Attributes
    ----------
    matchControllerRef : bool, default is Undefined, optional
        MatchControllerRef ensures an object with the same controller reference
        as the selecting object is selected.
    matchLabels : {str:str}, default is Undefined, optional
        MatchLabels ensures an object with matching labels is selected.
    policy : DNSCloudflareCrossplaneIoV1alpha1RecordSpecInitProviderZoneIDSelectorPolicy, default is Undefined, optional
        policy
    """


    matchControllerRef?: bool

    matchLabels?: {str:str}

    policy?: DNSCloudflareCrossplaneIoV1alpha1RecordSpecInitProviderZoneIDSelectorPolicy


schema DNSCloudflareCrossplaneIoV1alpha1RecordSpecInitProviderZoneIDSelectorPolicy:
    r"""
    Policies for selection.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSCloudflareCrossplaneIoV1alpha1RecordSpecProviderConfigRef:
    r"""
    ProviderConfigReference specifies how the provider that will be used to
    create, observe, update, and delete this managed resource should be
    configured.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DNSCloudflareCrossplaneIoV1alpha1RecordSpecProviderConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DNSCloudflareCrossplaneIoV1alpha1RecordSpecProviderConfigRefPolicy


schema DNSCloudflareCrossplaneIoV1alpha1RecordSpecProviderConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSCloudflareCrossplaneIoV1alpha1RecordSpecPublishConnectionDetailsTo:
    r"""
    PublishConnectionDetailsTo specifies the connection secret config which
    contains a name, metadata and a reference to secret store config to
    which any connection details for this managed resource should be written.
    Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.

    Attributes
    ----------
    configRef : DNSCloudflareCrossplaneIoV1alpha1RecordSpecPublishConnectionDetailsToConfigRef, default is Undefined, optional
        config ref
    metadata : DNSCloudflareCrossplaneIoV1alpha1RecordSpecPublishConnectionDetailsToMetadata, default is Undefined, optional
        metadata
    name : str, default is Undefined, required
        Name is the name of the connection secret.
    """


    configRef?: DNSCloudflareCrossplaneIoV1alpha1RecordSpecPublishConnectionDetailsToConfigRef

    metadata?: DNSCloudflareCrossplaneIoV1alpha1RecordSpecPublishConnectionDetailsToMetadata

    name: str


schema DNSCloudflareCrossplaneIoV1alpha1RecordSpecPublishConnectionDetailsToConfigRef:
    r"""
    SecretStoreConfigRef specifies which secret store config should be used
    for this ConnectionSecret.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the referenced object.
    policy : DNSCloudflareCrossplaneIoV1alpha1RecordSpecPublishConnectionDetailsToConfigRefPolicy, default is Undefined, optional
        policy
    """


    name: str

    policy?: DNSCloudflareCrossplaneIoV1alpha1RecordSpecPublishConnectionDetailsToConfigRefPolicy


schema DNSCloudflareCrossplaneIoV1alpha1RecordSpecPublishConnectionDetailsToConfigRefPolicy:
    r"""
    Policies for referencing.

    Attributes
    ----------
    resolution : str, default is "Required", optional
        Resolution specifies whether resolution of this reference is required.
        The default is 'Required', which means the reconcile will fail if the
        reference cannot be resolved. 'Optional' means this reference will be
        a no-op if it cannot be resolved.
    resolve : str, default is Undefined, optional
        Resolve specifies when this reference should be resolved. The default
        is 'IfNotPresent', which will attempt to resolve the reference only when
        the corresponding field is not present. Use 'Always' to resolve the
        reference on every reconcile.
    """


    resolution?: "Required" | "Optional" = "Required"

    resolve?: "Always" | "IfNotPresent"


schema DNSCloudflareCrossplaneIoV1alpha1RecordSpecPublishConnectionDetailsToMetadata:
    r"""
    Metadata is the metadata for connection secret.

    Attributes
    ----------
    annotations : {str:str}, default is Undefined, optional
        Annotations are the annotations to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.annotations".
        - It is up to Secret Store implementation for others store types.
    labels : {str:str}, default is Undefined, optional
        Labels are the labels/tags to be added to connection secret.
        - For Kubernetes secrets, this will be used as "metadata.labels".
        - It is up to Secret Store implementation for others store types.
    $type : str, default is Undefined, optional
        Type is the SecretType for the connection secret.
        - Only valid for Kubernetes Secret Stores.
    """


    annotations?: {str:str}

    labels?: {str:str}

    $type?: str


schema DNSCloudflareCrossplaneIoV1alpha1RecordSpecWriteConnectionSecretToRef:
    r"""
    WriteConnectionSecretToReference specifies the namespace and name of a
    Secret to which any connection details for this managed resource should
    be written. Connection details frequently include the endpoint, username,
    and password required to connect to the managed resource.
    This field is planned to be replaced in a future release in favor of
    PublishConnectionDetailsTo. Currently, both could be set independently
    and connection details would be published to both without affecting
    each other.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the secret.
    namespace : str, default is Undefined, required
        Namespace of the secret.
    """


    name: str

    namespace: str


schema DNSCloudflareCrossplaneIoV1alpha1RecordStatus:
    r"""
    RecordStatus defines the observed state of Record.

    Attributes
    ----------
    atProvider : DNSCloudflareCrossplaneIoV1alpha1RecordStatusAtProvider, default is Undefined, optional
        at provider
    conditions : [DNSCloudflareCrossplaneIoV1alpha1RecordStatusConditionsItems0], default is Undefined, optional
        Conditions of the resource.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the latest metadata.generation
        which resulted in either a ready state, or stalled due to error
        it can not recover from without human intervention.
    """


    atProvider?: DNSCloudflareCrossplaneIoV1alpha1RecordStatusAtProvider

    conditions?: [DNSCloudflareCrossplaneIoV1alpha1RecordStatusConditionsItems0]

    observedGeneration?: int


schema DNSCloudflareCrossplaneIoV1alpha1RecordStatusAtProvider:
    r"""
    DNS cloudflare crossplane io v1alpha1 record status at provider

    Attributes
    ----------
    allowOverwrite : bool, default is Undefined, optional
        This configuration is not recommended for most environments. Defaults to false. **This configuration is not recommended for most environments**. Defaults to `false`.
    comment : str, default is Undefined, optional
        (String) Comments or notes about the DNS record. This field has no effect on DNS responses.
        Comments or notes about the DNS record. This field has no effect on DNS responses.
    content : str, default is Undefined, optional
        (String) The content of the record. Must provide only one of data, content, value.
        The content of the record. Must provide only one of `data`, `content`, `value`.
    createdOn : str, default is Undefined, optional
        (String) The RFC3339 timestamp of when the record was created.
        The RFC3339 timestamp of when the record was created.
    data : [DNSCloudflareCrossplaneIoV1alpha1RecordStatusAtProviderDataItems0], default is Undefined, optional
        (Block List, Max: 1) Map of attributes that constitute the record value. Must provide only one of data, content, value. (see below for nested schema)
        Map of attributes that constitute the record value. Must provide only one of `data`, `content`, `value`.
    hostname : str, default is Undefined, optional
        (String) The FQDN of the record.
        The FQDN of the record.
    id : str, default is Undefined, optional
        (String) The ID of this resource.
    metadata : {str:str}, default is Undefined, optional
        value map of string metadata Cloudflare associates with the record.
        A key-value map of string metadata Cloudflare associates with the record.
    modifiedOn : str, default is Undefined, optional
        (String) The RFC3339 timestamp of when the record was last modified.
        The RFC3339 timestamp of when the record was last modified.
    name : str, default is Undefined, optional
        (String) The name of the record. Modifying this attribute will force creation of a new resource.
        The name of the record. **Modifying this attribute will force creation of a new resource.**
    priority : float, default is Undefined, optional
        (Number) The priority of the record.
        The priority of the record.
    proxiable : bool, default is Undefined, optional
        (Boolean) Shows whether this record can be proxied.
        Shows whether this record can be proxied.
    proxied : bool, default is Undefined, optional
        (Boolean) Whether the record gets Cloudflare's origin protection.
        Whether the record gets Cloudflare's origin protection.
    tags : [str], default is Undefined, optional
        (Set of String) Custom tags for the DNS record.
        Custom tags for the DNS record.
    ttl : float, default is Undefined, optional
        (Number) The TTL of the record.
        The TTL of the record.
    $type : str, default is Undefined, optional
        (String) The type of the record. Available values: A, AAAA, CAA, CNAME, TXT, SRV, LOC, MX, NS, SPF, CERT, DNSKEY, DS, NAPTR, SMIMEA, SSHFP, TLSA, URI, PTR, HTTPS, SVCB. Modifying this attribute will force creation of a new resource.
        The type of the record. Available values: `A`, `AAAA`, `CAA`, `CNAME`, `TXT`, `SRV`, `LOC`, `MX`, `NS`, `SPF`, `CERT`, `DNSKEY`, `DS`, `NAPTR`, `SMIMEA`, `SSHFP`, `TLSA`, `URI`, `PTR`, `HTTPS`, `SVCB`. **Modifying this attribute will force creation of a new resource.**
    value : str, default is Undefined, optional
        (String, Deprecated) The value of the record. Must provide only one of data, content, value.
        The value of the record. Must provide only one of `data`, `content`, `value`.
    zoneId : str, default is Undefined, optional
        (String) The zone identifier to target for the resource. Modifying this attribute will force creation of a new resource.
        The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
    """


    allowOverwrite?: bool

    comment?: str

    content?: str

    createdOn?: str

    data?: [DNSCloudflareCrossplaneIoV1alpha1RecordStatusAtProviderDataItems0]

    hostname?: str

    id?: str

    metadata?: {str:str}

    modifiedOn?: str

    name?: str

    priority?: float

    proxiable?: bool

    proxied?: bool

    tags?: [str]

    ttl?: float

    $type?: str

    value?: str

    zoneId?: str


schema DNSCloudflareCrossplaneIoV1alpha1RecordStatusAtProviderDataItems0:
    r"""
    DNS cloudflare crossplane io v1alpha1 record status at provider data items0

    Attributes
    ----------
    algorithm : float, default is Undefined, optional
        (Number)
    altitude : float, default is Undefined, optional
        (Number)
    certificate : str, default is Undefined, optional
        (String)
    content : str, default is Undefined, optional
        (String) The content of the record. Must provide only one of data, content, value.
    digest : str, default is Undefined, optional
        (String)
    digestType : float, default is Undefined, optional
        (Number)
    fingerprint : str, default is Undefined, optional
        (String)
    flags : str, default is Undefined, optional
        (String)
    keyTag : float, default is Undefined, optional
        (Number)
    latDegrees : float, default is Undefined, optional
        (Number)
    latDirection : str, default is Undefined, optional
        (String)
    latMinutes : float, default is Undefined, optional
        (Number)
    latSeconds : float, default is Undefined, optional
        (Number)
    longDegrees : float, default is Undefined, optional
        (Number)
    longDirection : str, default is Undefined, optional
        (String)
    longMinutes : float, default is Undefined, optional
        (Number)
    longSeconds : float, default is Undefined, optional
        (Number)
    matchingType : float, default is Undefined, optional
        (Number)
    name : str, default is Undefined, optional
        (String) The name of the record. Modifying this attribute will force creation of a new resource.
    order : float, default is Undefined, optional
        (Number)
    port : float, default is Undefined, optional
        (Number)
    precisionHorz : float, default is Undefined, optional
        (Number)
    precisionVert : float, default is Undefined, optional
        (Number)
    preference : float, default is Undefined, optional
        (Number)
    priority : float, default is Undefined, optional
        (Number) The priority of the record.
    proto : str, default is Undefined, optional
        (String)
    $protocol : float, default is Undefined, optional
        (Number)
    publicKey : str, default is Undefined, optional
        (String)
    regex : str, default is Undefined, optional
        (String)
    replacement : str, default is Undefined, optional
        (String)
    selector : float, default is Undefined, optional
        (Number)
    service : str, default is Undefined, optional
        (String)
    size : float, default is Undefined, optional
        (Number)
    tag : str, default is Undefined, optional
        (String)
    target : str, default is Undefined, optional
        (String)
    $type : float, default is Undefined, optional
        (String) The type of the record. Available values: A, AAAA, CAA, CNAME, TXT, SRV, LOC, MX, NS, SPF, CERT, DNSKEY, DS, NAPTR, SMIMEA, SSHFP, TLSA, URI, PTR, HTTPS, SVCB. Modifying this attribute will force creation of a new resource.
    usage : float, default is Undefined, optional
        (Number)
    value : str, default is Undefined, optional
        (String, Deprecated) The value of the record. Must provide only one of data, content, value.
    weight : float, default is Undefined, optional
        (Number)
    """


    algorithm?: float

    altitude?: float

    certificate?: str

    content?: str

    digest?: str

    digestType?: float

    fingerprint?: str

    flags?: str

    keyTag?: float

    latDegrees?: float

    latDirection?: str

    latMinutes?: float

    latSeconds?: float

    longDegrees?: float

    longDirection?: str

    longMinutes?: float

    longSeconds?: float

    matchingType?: float

    name?: str

    order?: float

    port?: float

    precisionHorz?: float

    precisionVert?: float

    preference?: float

    priority?: float

    proto?: str

    $protocol?: float

    publicKey?: str

    regex?: str

    replacement?: str

    selector?: float

    service?: str

    size?: float

    tag?: str

    target?: str

    $type?: float

    usage?: float

    value?: str

    weight?: float


schema DNSCloudflareCrossplaneIoV1alpha1RecordStatusConditionsItems0:
    r"""
    A Condition that may apply to a resource.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        LastTransitionTime is the last time this condition transitioned from one
        status to another.
    message : str, default is Undefined, optional
        A Message containing details about this condition's last transition from
        one status to another, if any.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.
    reason : str, default is Undefined, required
        A Reason for this condition's last transition from one status to another.
    status : str, default is Undefined, required
        Status of this condition; is it currently True, False, or Unknown?
    $type : str, default is Undefined, required
        Type of this condition. At most one of each condition type may apply to
        a resource at any point in time.
    """


    lastTransitionTime: str

    message?: str

    observedGeneration?: int

    reason: str

    status: str

    $type: str


